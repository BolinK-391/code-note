#include "stdio.h"

//一个整数存到一个字符要发生截断
//%d打印字符要进行整型提升


int main(){
    char a = -1;
    //10000000000000000000000000000001（四个字节）
    //11111111111111111111111111111110
    //11111111111111111111111111111111
    //补码：1111111（一个字节）
    //提升补码：11111111111111111111111111111111（按符号位[1]提升）
    signed char b = -1;//有符号位（）同上
    //补码：1111111
    //提升补码：11111111111111111111111111111111（按符号位[1]提升）
    unsigned char c = -1;//无符号位（高位补0）
    //补码：1111111
    //提升补码：00000000000000000000000001111111（无符号位提升，高位补0）
    printf("%d(%%d打印整型),%d,%d",a,b,c);



    char d = -128;
    //10000000000000000000000010000000
    //11111111111111111111111101111111
    //11111111111111111111111110000000
    //10000000

    printf("\n%u(%%u打印无符号整型)",d);
    //整型提升
    //11111111111111111111111110000000
    //对于无符号整型[原码、反码、补码]相同(%u直接输出)

    //(如果这里是%d)则需要进行补码->反码->原码的转换
    //11111111111111111111111110000000
    //11111111111111111111111101111111
    //10000000000000000000000010000000 '-128'

    int i = -20;
    //10000000000000000000000000010100
    //11111111111111111111111111101011
    //11111111111111111111111111101100
    unsigned int j = 10;
    //00000000000000000000000000001010

    //11111111111111111111111111110110
    //11111111111111111111111111110101
    //10000000000000000000000000001010
    printf("\n%d",i+j);

    //三种方式存储空间、存储方式一样
    //理解方式不一样（有无符号位）

    //%d认为内存放的是有符号整数
    //%u认为内存放的是无符号整数
    return 0 ;
}
