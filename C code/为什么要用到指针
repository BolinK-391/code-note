#include <stdio.h>
#include <string.h>
void change(int *pa,int *pb)//形式参数（形参）  
//没被调用的时候内存没有分配空间给它，是个摆设，被调用以后才会有内存分配给他。出函数后被销毁。
{
    int t = *pa;
    *pa = *pb;
    *pb = t;
}

int main ()
{
    int a = 10;
    int b = 20;
    printf("%d%d",a,b);
    change(&a,&b);//实际参数（实参）
//这里不用指针的话，变量a、b进入函数change地址会发生改变，不是原来的&a、&b。
//change在被调用的时候，实参传给形参，其实形参是实参的一份临时拷贝。
//改变形参，不能改变实参。
    printf("\n%d%d",a,b);
    return 0;
}
//一般如果调用函数希望改变主函数的值的话，就需要用到指针变量。
//但是如果只是为了返回一个值（比如找出两个数当中最大的一值就可以不用到指针，这个时候函数类型为int。
//1.传址调用是把函数外部创建变量的内存地址传递给函数参数的一种调用函数的方式。
//这种传参方式可以让函数和函数外边的变量建立起真正的联系，也就是函数内部可以直接操作函数外部的变量。
//2.传值调用对于函数的形参和实参分别占有不同内存块，对形参的修改不会影响实参。
