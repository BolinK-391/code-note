非比较排序
思想：计数排序又称为鸽巢原理，是对哈希直接定址法的变形应用。 操作步骤：
1. 统计相同元素出现次数
2. 根据统计的结果将序列回收到原来的序列中

计数排序的特性总结：
1. 计数排序在数据范围集中时，效率很高，但是适用范围及场景有限。
2. 时间复杂度：O(MAX(N,范围))
3. 空间复杂度：O(范围)
4. 稳定性：稳定


// 计数排序
//时间复杂度：O(MAX(N,范围))
//空间复杂度：O(范围)
//只适用于整形，如果浮点数或者字符串排序，还得用比较排序
void CountSort(int* a,int n)
{
    assert(a);

    int min = a[0];
    int max = a[0];
    for(int i = 1; i < n; ++i)
    {
        if(a[i] > max)
            max = a[i];
        if(a[i] < min)
            min = a[i];
    }

    int range = max - min + 1;
    int *countArr = malloc(sizeof(int)*range);
    memset(countArr,0,sizeof (int)*range);

    //统计次数
    for(int i = 0; i < n; ++i)
    {
        countArr[a[i] -min]++;
    }

    //排序
    int index = 0;
    for(int j = 0;j < range; ++j)
    {
        while(countArr[j]--)
            a[index++] = j + min;
    }

    free(countArr);
}