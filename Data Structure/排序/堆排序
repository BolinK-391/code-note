堆排序(Heapsort)是指利用堆积树（堆）这种数据结构所设计的一种排序算法，它是选择排序的一种。
它是通过堆来进行选择数据。需要注意的是排升序要建大堆，排降序建小堆。

堆排序的特性总结：
1. 堆排序使用堆来选数，效率就高了很多。
2. 时间复杂度：O(N*logN)
3. 空间复杂度：O(1)
4. 稳定性：不稳定


// 堆排序
void AdjustDwon(int* a, int n, int root)
{
    //向下调整算法
    int parent = root;
    int child = parent * 2 + 1;
    while(child < n)
    {
        if(child+1 < n && a[child+1] > a[child])
            child++;
        if(a[child] > a[parent])
        {
            Swap(&a[child], &a[parent]);
            parent = child;
            child = parent * 2 + 1;
        }
        else
        {
            break;
        }
    }

}
void HeapSort(int* a, int n)
{
    //排升序，建大堆还是小堆？大堆。（建大堆后将根和第n个数交换后，再对前n-1个数再次建大堆）
    for(int i = (n-1-1)/2; i >= 0; i--)
    {
        AdjustDwon(a,n,i);
    }
    int end = n - 1;
    while (end > 0)
    {
        Swap(&a[0],&a[end]);
        AdjustDwon(a,end,0);
        end--;
    }
}